#the classifier to use
regressor : |
  ensemble.RandomForestRegressor(
    n_estimators=30,
    max_features='sqrt',
    n_jobs=-1,
    max_depth=12,
  )
# randomly sample the data if you dont want to use the whole set
n_signal : 500

# define th number of cross validations to perform
n_cross_validations : 20

# define the name of the regression target
target_name: mc_E

#Keylist = ['size', 'cen_x', 'cen_y', 'lenght', 'width', 'r', 'phi', 'psi', 'miss', 'skewness', 'kurtosis', 'mc_E', 'mc_altitude', 'mc_azimuth', 'mc_core_x', 'mc_core_y', 'mc_h_first_int', 'mc_azimuth_raw', 'mc_altitude_raw', 'mc_azimuth_cor', 'mc_altitude_cor', 'mc_time_slice', 'mc_refstep', 'camera_rotation_angle', 'tel_id', 'mc_gamma_proton', 'Reinheit', 'Effizienz', 'Genauigkeit', 'TP', 'FP', 'TN', 'FN']



# Define the name of the variable you want estimate by regression. The default is 'energy'.
# It will be written as <class_name>_prediction into the file when applying the model.
class_name: gamma_energy


training_variables:
  - size
  - width
  - cen_x
  - cen_y
  - r
  - phi
  - psi
  - skewness
  - kurtosis
  - length

# Generate some features using pd.DataFrame.eval
# List all keys that have to be read from the input files
# in needed keys.
# features must be a mapping of feature name -> expression
#feature_generation:
#  needed_keys:
#    - width
#    - bla
#  features:
#    area: width * bla * @pi
